{"version":3,"sources":["OSMBuildings-OL5.js","components/OLMapSample.js","index.js"],"names":["ZOOM","MAP_SIZE","MAX_HEIGHT","CAM_X","CAM_Y","isZooming","Block","context","polygon","innerPolygons","height","minHeight","color","altColor","roofColor","i","il","roof","this","_extrude","innerRoofs","length","fillStyle","beginPath","_ring","closePath","stroke","fill","_a","_b","scale","CAM_Z","minScale","a","x","y","b","ORIGIN_X","ORIGIN_Y","buildings","project","moveTo","lineTo","_ringAbs","mode","shadows","Buildings","data","p","m","clearRect","WIDTH","HEIGHT","MIN_ZOOM","item","h","mh","footprint","wallColor","sortCam","dataItems","getItems","sort","Geometry","getDistance","center","cylinder","Cylinder","pyramid","Pyramid","block","simplified","isSimple","Functions","isVisible","WALL_COLOR_STR","ALT_COLOR_STR","ROOF_COLOR_STR","strokeStyle","shape","draw","radius","holes","roofShape","roofHeight","Color","parse","lightness","s","l","H","S","L","A","q","t","v","max","Math","min","clamp","rgba","r","g","hue2rgb","round","toRGBA","toString","slice","toFixed","join","str","aqua","black","blue","fuchsia","gray","grey","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","toLowerCase","match","parseInt","parseFloat","fromRGBA","d","topRadius","a1","a2","c","apex","tangents","_tangents","atan2","y1","x1","PI","arc","HALF_PI","_circle","p1","p2","x2","y2","c1","r1","c2","r2","dx","dy","dr","sqdist","nx","ny","dist","sqrt","vx","vy","res","sign","push","Data","geoJSON","GeoJSON","setData","hitAreas","DATA_SRC","animTimer","loadedItems","items","request","Request","buffer","px","Int32Array","geoToPixel","simplifyPolygon","reset","scope","setInterval","isNeeded","requestAnimFrame","render","clearInterval","allAreNew","scaledItem","id","geojson","read","fadeIn","zoomScale","pow","realHeight","isNaN","getPixelFootprint","getCenter","PIXEL_PER_DEG","isRotational","innerFootprint","alpha","ZOOM_FACTOR","relationId","hitColor","idToColor","JSON","e","isStatic","resetItems","_staticData","addRenderItems","src","key","replace","update","tileZoom","zoomedTileSize","minX","minY","maxX","ceil","maxY","loadTile","callback","json","zoom","url","loadJSON","deg","rad","LAT","atan","exp","LON","lat","lon","latitude","log","tan","QUARTER_PI","sVal","sMin","sMax","dMin","dMax","METERS_PER_LEVEL","materialColors","brick","bronze","canvas","concrete","copper","glass","gold","plants","metal","panel","plaster","roof_tiles","slate","stone","tar_paper","wood","baseMaterials","asphalt","bitumen","bricks","glas","glassfront","grass","masonry","granite","panels","paving_stones","plastered","rooftiles","roofingfelt","sandstone","sheet","sheets","shingle","shingles","slates","steel","tar","tent","thatch","tile","tiles","WINDING_CLOCKWISE","WINDING_COUNTER_CLOCKWISE","points","direction","getWinding","revPoints","prop","levels","DEFAULT_HEIGHT","minLevel","material","getMaterialColor","roofMaterial","geometry","sub","geometries","type","getGeometries","apply","coordinates","j","jl","outer","inner","makeWinding","obj","hasOwnProperty","feature","baseItem","collection","features","alignProperties","properties","clone","getLonDelta","Infinity","width","ratio","sqRadius","py","p1x","p1y","p2x","p2y","maxSqDist","sqDist","index","len","markers","Uint8Array","first","last","firstStack","lastStack","newBuffer","getSquareSegmentDistance","pop","minLon","maxLon","HitAreas","_idMapping","_timer","self","setTimeout","_render","hitArea","_imageData","getImageData","imageData","pos","indexOf","Layers","container","document","createElement","style","pointerEvents","position","left","top","setContext","createContext","quick","transform","imageRendering","getContext","lineCap","lineJoin","lineWidth","imageSmoothingEnabled","appendChild","parentNode","removeChild","_triangle","cacheData","cacheIndex","cacheSize","maxCacheSize","req","XMLHttpRequest","onreadystatechange","readyState","status","responseText","size","shift","open","send","xhr","ex","Shadows","sunPosition","SunPosition","enabled","blurColor","blurSize","date","Date","screenCenter","sun","pixelToGeo","CENTER_X","CENTER_Y","getSunPosition","longitude","altitude","cos","azimuth","sin","opacity","shadowColor","shadowBlur","shadow","globalCompositeOperation","shadowMask","Simplified","init","maxZoom","maxHeight","asin","dayMs","J1970","J2000","valueOf","toJulian","phi","dec","lw","M","C","toDays","getSolarMeanAnomaly","getEquationOfCenter","getEclipticLongitude","D","getDeclination","getRightAscension","getSiderealTime","getAltitude","getAzimuth","OSMBuildings","map","WALL_COLOR","ALT_COLOR","ROOF_COLOR","undefined","layers","load","unload","removeLayer","remove","onEach","each","handler","payload","onClick","click","source","VectorSource","projection","olProj","maxExtent","setMap","addLayer","console","VERSION","ATTRIBUTION","getSource","origin","offset","setSize","z","MAP_TILE_SIZE","setZoom","getCoordinateFromPixel","getView","getResolution","ext","setGlobalOrigin","appendTo","getElementById","getTargetElement","getSize","on","getZoom","setOrigin","dataToSet","set","VectorLayer","IS_IOS","test","navigator","userAgent","IS_MSIE","window","requestAnimationFrame","OLMapSample","props","componentDidMount","Map","target","TileLayer","OSM","view","View","setState","toggleOSMBuildings","state","osmBuildings","text","featuresLayer","backgroundColor","Button","margin","variant","React","Component"],"mappings":"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","file":"static/js/main.dcb9f93e.chunk.js","sourcesContent":["/* eslint-disable default-case */\n/**\n * Copyright (C) 2019 OSM Buildings, Jan Marsch\n * A JavaScript library for visualizing building geometry on interactive maps.\n * @osmbuildings, http://osmbuildings.org\n *\n * Modificated by Fran Raga : https://github.com/All4Gis\n */\n\nimport { Vector as VectorLayer } from \"ol/layer.js\";\nimport VectorSource from \"ol/source/Vector.js\";\nimport * as olProj from \"ol/proj.js\";\n\n//****** file: Block.js ******\nclass Block {\n  draw(\n    context,\n    polygon,\n    innerPolygons,\n    height,\n    minHeight,\n    color,\n    altColor,\n    roofColor\n  ) {\n    var i,\n      il,\n      roof = this._extrude(\n        context,\n        polygon,\n        height,\n        minHeight,\n        color,\n        altColor\n      ),\n      innerRoofs = [];\n\n    if (innerPolygons) {\n      for (i = 0, il = innerPolygons.length; i < il; i++) {\n        innerRoofs[i] = this._extrude(\n          context,\n          innerPolygons[i],\n          height,\n          minHeight,\n          color,\n          altColor\n        );\n      }\n    }\n\n    context.fillStyle = roofColor;\n\n    context.beginPath();\n    this._ring(context, roof);\n    if (innerPolygons) {\n      for (i = 0, il = innerRoofs.length; i < il; i++) {\n        this._ring(context, innerRoofs[i]);\n      }\n    }\n    context.closePath();\n    context.stroke();\n    context.fill();\n  }\n\n  _extrude(context, polygon, height, minHeight, color, altColor) {\n    var scale = CAM_Z / (CAM_Z - height),\n      minScale = CAM_Z / (CAM_Z - minHeight),\n      a = {\n        x: 0,\n        y: 0\n      },\n      b = {\n        x: 0,\n        y: 0\n      },\n      _a,\n      _b,\n      roof = [];\n\n    for (var i = 0, il = polygon.length - 3; i < il; i += 2) {\n      a.x = polygon[i] - ORIGIN_X;\n      a.y = polygon[i + 1] - ORIGIN_Y;\n      b.x = polygon[i + 2] - ORIGIN_X;\n      b.y = polygon[i + 3] - ORIGIN_Y;\n\n      _a = buildings.project(a, scale);\n      _b = buildings.project(b, scale);\n\n      if (minHeight) {\n        a = buildings.project(a, minScale);\n        b = buildings.project(b, minScale);\n      }\n\n      // backface culling check\n      if ((b.x - a.x) * (_a.y - a.y) > (_a.x - a.x) * (b.y - a.y)) {\n        // depending on direction, set wall shading\n        if ((a.x < b.x && a.y < b.y) || (a.x > b.x && a.y > b.y)) {\n          context.fillStyle = altColor;\n        } else {\n          context.fillStyle = color;\n        }\n\n        context.beginPath();\n        this._ring(context, [b.x, b.y, a.x, a.y, _a.x, _a.y, _b.x, _b.y]);\n        context.closePath();\n        context.fill();\n      }\n\n      roof[i] = _a.x;\n      roof[i + 1] = _a.y;\n    }\n\n    return roof;\n  }\n\n  _ring(context, polygon) {\n    context.moveTo(polygon[0], polygon[1]);\n    for (var i = 2, il = polygon.length - 1; i < il; i += 2) {\n      context.lineTo(polygon[i], polygon[i + 1]);\n    }\n  }\n\n  simplified(context, polygon, innerPolygons) {\n    context.beginPath();\n    this._ringAbs(context, polygon);\n    if (innerPolygons) {\n      for (var i = 0, il = innerPolygons.length; i < il; i++) {\n        this._ringAbs(context, innerPolygons[i]);\n      }\n    }\n    context.closePath();\n    context.stroke();\n    context.fill();\n  }\n\n  _ringAbs(context, polygon) {\n    context.moveTo(polygon[0] - ORIGIN_X, polygon[1] - ORIGIN_Y);\n    for (var i = 2, il = polygon.length - 1; i < il; i += 2) {\n      context.lineTo(polygon[i] - ORIGIN_X, polygon[i + 1] - ORIGIN_Y);\n    }\n  }\n\n  shadow(context, polygon, innerPolygons, height, minHeight) {\n    var mode = null,\n      a = {\n        x: 0,\n        y: 0\n      },\n      b = {\n        x: 0,\n        y: 0\n      },\n      _a,\n      _b;\n\n    for (var i = 0, il = polygon.length - 3; i < il; i += 2) {\n      a.x = polygon[i] - ORIGIN_X;\n      a.y = polygon[i + 1] - ORIGIN_Y;\n      b.x = polygon[i + 2] - ORIGIN_X;\n      b.y = polygon[i + 3] - ORIGIN_Y;\n\n      _a = shadows.project(a, height);\n      _b = shadows.project(b, height);\n\n      if (minHeight) {\n        a = shadows.project(a, minHeight);\n        b = shadows.project(b, minHeight);\n      }\n\n      // mode 0: floor edges, mode 1: roof edges\n      if ((b.x - a.x) * (_a.y - a.y) > (_a.x - a.x) * (b.y - a.y)) {\n        if (mode === 1) {\n          context.lineTo(a.x, a.y);\n        }\n        mode = 0;\n        if (!i) {\n          context.moveTo(a.x, a.y);\n        }\n        context.lineTo(b.x, b.y);\n      } else {\n        if (mode === 0) {\n          context.lineTo(_a.x, _a.y);\n        }\n        mode = 1;\n        if (!i) {\n          context.moveTo(_a.x, _a.y);\n        }\n        context.lineTo(_b.x, _b.y);\n      }\n    }\n\n    if (innerPolygons) {\n      for (i = 0, il = innerPolygons.length; i < il; i++) {\n        this._ringAbs(context, innerPolygons[i]);\n      }\n    }\n  }\n\n  shadowMask(context, polygon, innerPolygons) {\n    this._ringAbs(context, polygon);\n    if (innerPolygons) {\n      for (var i = 0, il = innerPolygons.length; i < il; i++) {\n        this._ringAbs(context, innerPolygons[i]);\n      }\n    }\n  }\n\n  hitArea(context, polygon, innerPolygons, height, minHeight, color) {\n    var mode = null,\n      a = {\n        x: 0,\n        y: 0\n      },\n      b = {\n        x: 0,\n        y: 0\n      },\n      scale = CAM_Z / (CAM_Z - height),\n      minScale = CAM_Z / (CAM_Z - minHeight),\n      _a,\n      _b;\n\n    context.fillStyle = color;\n    context.beginPath();\n\n    for (var i = 0, il = polygon.length - 3; i < il; i += 2) {\n      a.x = polygon[i] - ORIGIN_X;\n      a.y = polygon[i + 1] - ORIGIN_Y;\n      b.x = polygon[i + 2] - ORIGIN_X;\n      b.y = polygon[i + 3] - ORIGIN_Y;\n\n      _a = buildings.project(a, scale);\n      _b = buildings.project(b, scale);\n\n      if (minHeight) {\n        a = buildings.project(a, minScale);\n        b = buildings.project(b, minScale);\n      }\n\n      // mode 0: floor edges, mode 1: roof edges\n      if ((b.x - a.x) * (_a.y - a.y) > (_a.x - a.x) * (b.y - a.y)) {\n        if (mode === 1) {\n          // mode is initially undefined\n          context.lineTo(a.x, a.y);\n        }\n        mode = 0;\n        if (!i) {\n          context.moveTo(a.x, a.y);\n        }\n        context.lineTo(b.x, b.y);\n      } else {\n        if (mode === 0) {\n          // mode is initially undefined\n          context.lineTo(_a.x, _a.y);\n        }\n        mode = 1;\n        if (!i) {\n          context.moveTo(_a.x, _a.y);\n        }\n        context.lineTo(_b.x, _b.y);\n      }\n    }\n\n    context.closePath();\n    context.fill();\n  }\n}\n\n//****** file: Buildings.js ******\nclass Buildings {\n  constructor() {\n    this.data = null;\n  }\n  setData(data) {\n    this.data = data;\n  }\n\n  project(p, m) {\n    return {\n      x: ((p.x - CAM_X) * m + CAM_X) << 0,\n      y: ((p.y - CAM_Y) * m + CAM_Y) << 0\n    };\n  }\n\n  render() {\n    var context = this.context;\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n\n    // show on high zoom levels only and avoid rendering during zoom\n    if (ZOOM < MIN_ZOOM || isZooming) {\n      return;\n    }\n\n    var item,\n      h,\n      mh,\n      sortCam = {\n        x: CAM_X + ORIGIN_X,\n        y: CAM_Y + ORIGIN_Y\n      },\n      footprint,\n      wallColor,\n      altColor,\n      roofColor,\n      dataItems = this.data.getItems();\n\n    dataItems.sort(function(a, b) {\n      return (\n        a.minHeight - b.minHeight ||\n        Geometry.getDistance(b.center, sortCam) -\n          Geometry.getDistance(a.center, sortCam) ||\n        b.height - a.height\n      );\n    });\n\n    var cylinder = new Cylinder();\n    var pyramid = new Pyramid();\n    var block = new Block();\n    for (var i = 0, il = dataItems.length; i < il; i++) {\n      item = dataItems[i];\n\n      if (simplified.isSimple(item)) {\n        continue;\n      }\n\n      footprint = item.footprint;\n\n      if (!Functions.isVisible(footprint)) {\n        continue;\n      }\n\n      // when fading in, use a dynamic height\n      h = item.scale < 1 ? item.height * item.scale : item.height;\n\n      mh = 0;\n      if (item.minHeight) {\n        mh = item.scale < 1 ? item.minHeight * item.scale : item.minHeight;\n      }\n\n      wallColor = item.wallColor || WALL_COLOR_STR;\n      altColor = item.altColor || ALT_COLOR_STR;\n      roofColor = item.roofColor || ROOF_COLOR_STR;\n      context.strokeStyle = altColor;\n\n      switch (item.shape) {\n        case \"cylinder\":\n          cylinder.draw(\n            context,\n            item.center,\n            item.radius,\n            item.radius,\n            h,\n            mh,\n            wallColor,\n            altColor,\n            roofColor\n          );\n          break;\n        case \"cone\":\n          cylinder.draw(\n            context,\n            item.center,\n            item.radius,\n            0,\n            h,\n            mh,\n            wallColor,\n            altColor\n          );\n          break;\n        case \"dome\":\n          cylinder.draw(\n            context,\n            item.center,\n            item.radius,\n            item.radius / 2,\n            h,\n            mh,\n            wallColor,\n            altColor\n          );\n          break;\n        case \"sphere\":\n          cylinder.draw(\n            context,\n            item.center,\n            item.radius,\n            item.radius,\n            h,\n            mh,\n            wallColor,\n            altColor,\n            roofColor\n          );\n          break;\n        case \"pyramid\":\n          pyramid.draw(\n            context,\n            footprint,\n            item.center,\n            h,\n            mh,\n            wallColor,\n            altColor\n          );\n          break;\n        default:\n          block.draw(\n            context,\n            footprint,\n            item.holes,\n            h,\n            mh,\n            wallColor,\n            altColor,\n            roofColor\n          );\n      }\n\n      switch (item.roofShape) {\n        case \"cone\":\n          cylinder.draw(\n            context,\n            item.center,\n            item.radius,\n            0,\n            h + item.roofHeight,\n            h,\n            roofColor,\n            \"\" + Color.parse(roofColor).lightness(0.9)\n          );\n          break;\n        case \"dome\":\n          cylinder.draw(\n            context,\n            item.center,\n            item.radius,\n            item.radius / 2,\n            h + item.roofHeight,\n            h,\n            roofColor,\n            \"\" + Color.parse(roofColor).lightness(0.9)\n          );\n          break;\n        case \"pyramid\":\n          pyramid.draw(\n            context,\n            footprint,\n            item.center,\n            h + item.roofHeight,\n            h,\n            roofColor,\n            Color.parse(roofColor).lightness(0.9)\n          );\n          break;\n      }\n    }\n  }\n  setContext(context) {\n    this.context = context;\n  }\n}\n\n//****** file: Color.debug.js ******\nclass Color {\n  constructor(h, s, l, a) {\n    this.H = h;\n    this.S = s;\n    this.L = l;\n    this.A = a;\n  }\n\n  hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n\n  clamp(v, max) {\n    return Math.min(max, Math.max(0, v));\n  }\n\n  /*\n   * str can be in any of these:\n   * #0099ff rgb(64, 128, 255) rgba(64, 128, 255, 0.5)\n   */\n  static parse(str) {\n    var r = 0,\n      g = 0,\n      b = 0,\n      a = 1,\n      m;\n    // Static variable\n    var w3cColors = {\n      aqua: \"#00ffff\",\n      black: \"#000000\",\n      blue: \"#0000ff\",\n      fuchsia: \"#ff00ff\",\n      gray: \"#808080\",\n      grey: \"#808080\",\n      green: \"#008000\",\n      lime: \"#00ff00\",\n      maroon: \"#800000\",\n      navy: \"#000080\",\n      olive: \"#808000\",\n      orange: \"#ffa500\",\n      purple: \"#800080\",\n      red: \"#ff0000\",\n      silver: \"#c0c0c0\",\n      teal: \"#008080\",\n      white: \"#ffffff\",\n      yellow: \"#ffff00\"\n    };\n\n    str = (\"\" + str).toLowerCase();\n    str = w3cColors[str] || str;\n\n    if ((m = str.match(/^#(\\w{2})(\\w{2})(\\w{2})$/))) {\n      r = parseInt(m[1], 16);\n      g = parseInt(m[2], 16);\n      b = parseInt(m[3], 16);\n    } else if (\n      (m = str.match(/rgba?\\((\\d+)\\D+(\\d+)\\D+(\\d+)(\\D+([\\d.]+))?\\)/))\n    ) {\n      r = parseInt(m[1], 10);\n      g = parseInt(m[2], 10);\n      b = parseInt(m[3], 10);\n      a = m[4] ? parseFloat(m[5]) : 1;\n    } else {\n      return;\n    }\n\n    return this.fromRGBA(r, g, b, a);\n  }\n\n  toRGBA() {\n    var h = this.clamp(this.H, 360),\n      s = this.clamp(this.S, 1),\n      l = this.clamp(this.L, 1),\n      rgba = {\n        a: this.clamp(this.A, 1)\n      };\n\n    // achromatic\n    if (s === 0) {\n      rgba.r = l;\n      rgba.g = l;\n      rgba.b = l;\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s,\n        p = 2 * l - q;\n      h /= 360;\n\n      rgba.r = this.hue2rgb(p, q, h + 1 / 3);\n      rgba.g = this.hue2rgb(p, q, h);\n      rgba.b = this.hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return {\n      r: Math.round(rgba.r * 255),\n      g: Math.round(rgba.g * 255),\n      b: Math.round(rgba.b * 255),\n      a: rgba.a\n    };\n  }\n\n  static fromRGBA(r, g, b, a) {\n    if (typeof r === \"object\") {\n      g = r.g / 255;\n      b = r.b / 255;\n      a = r.a;\n      r = r.r / 255;\n    } else {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n    }\n\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b),\n      h,\n      s,\n      l = (max + min) / 2,\n      d = max - min;\n\n    if (!d) {\n      h = s = 0; // achromatic\n    } else {\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h *= 60;\n    }\n\n    return new Color(h, s, l, a);\n  }\n\n  toString() {\n    var rgba = this.toRGBA();\n\n    if (rgba.a === 1) {\n      return (\n        \"#\" +\n        ((1 << 24) + (rgba.r << 16) + (rgba.g << 8) + rgba.b)\n          .toString(16)\n          .slice(1, 7)\n      );\n    }\n    return (\n      \"rgba(\" + [rgba.r, rgba.g, rgba.b, rgba.a.toFixed(2)].join(\",\") + \")\"\n    );\n  }\n\n  hue(h) {\n    return new Color(this.H * h, this.S, this.L, this.A);\n  }\n\n  saturation(s) {\n    return new Color(this.H, this.S * s, this.L, this.A);\n  }\n\n  lightness(l) {\n    return new Color(this.H, this.S, this.L * l, this.A);\n  }\n\n  alpha(a) {\n    return new Color(this.H, this.S, this.L, this.A * a);\n  }\n}\n\n//****** file: Cylinder.js ******\nclass Cylinder {\n  draw(\n    context,\n    center,\n    radius,\n    topRadius,\n    height,\n    minHeight,\n    color,\n    altColor,\n    roofColor\n  ) {\n    var c = {\n        x: center.x - ORIGIN_X,\n        y: center.y - ORIGIN_Y\n      },\n      scale = CAM_Z / (CAM_Z - height),\n      minScale = CAM_Z / (CAM_Z - minHeight),\n      apex = buildings.project(c, scale),\n      a1,\n      a2;\n\n    topRadius *= scale;\n\n    if (minHeight) {\n      c = buildings.project(c, minScale);\n      radius = radius * minScale;\n    }\n\n    // common tangents for ground and roof circle\n    var tangents = this._tangents(c, radius, apex, topRadius);\n\n    // no tangents? top circle is inside bottom circle\n    if (!tangents) {\n      a1 = 1.5 * PI;\n      a2 = 1.5 * PI;\n    } else {\n      a1 = atan2(tangents[0].y1 - c.y, tangents[0].x1 - c.x);\n      a2 = atan2(tangents[1].y1 - c.y, tangents[1].x1 - c.x);\n    }\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.arc(apex.x, apex.y, topRadius, HALF_PI, a1, true);\n    context.arc(c.x, c.y, radius, a1, HALF_PI);\n    context.closePath();\n    context.fill();\n\n    context.fillStyle = altColor;\n    context.beginPath();\n    context.arc(apex.x, apex.y, topRadius, a2, HALF_PI, true);\n    context.arc(c.x, c.y, radius, HALF_PI, a2);\n    context.closePath();\n    context.fill();\n\n    context.fillStyle = roofColor;\n    this._circle(context, apex, topRadius);\n  }\n\n  simplified(context, center, radius) {\n    this._circle(\n      context,\n      {\n        x: center.x - ORIGIN_X,\n        y: center.y - ORIGIN_Y\n      },\n      radius\n    );\n  }\n\n  shadow(context, center, radius, topRadius, height, minHeight) {\n    var c = {\n        x: center.x - ORIGIN_X,\n        y: center.y - ORIGIN_Y\n      },\n      apex = shadows.project(c, height),\n      p1,\n      p2;\n\n    if (minHeight) {\n      c = shadows.project(c, minHeight);\n    }\n\n    // common tangents for ground and roof circle\n    var tangents = this._tangents(c, radius, apex, topRadius);\n\n    // TODO: no tangents? roof overlaps everything near cam position\n    if (tangents) {\n      p1 = atan2(tangents[0].y1 - c.y, tangents[0].x1 - c.x);\n      p2 = atan2(tangents[1].y1 - c.y, tangents[1].x1 - c.x);\n      context.moveTo(tangents[1].x2, tangents[1].y2);\n      context.arc(apex.x, apex.y, topRadius, p2, p1);\n      context.arc(c.x, c.y, radius, p1, p2);\n    } else {\n      context.moveTo(c.x + radius, c.y);\n      context.arc(c.x, c.y, radius, 0, 2 * PI);\n    }\n  }\n\n  shadowMask(context, center, radius) {\n    var c = {\n      x: center.x - ORIGIN_X,\n      y: center.y - ORIGIN_Y\n    };\n    context.moveTo(c.x + radius, c.y);\n    context.arc(c.x, c.y, radius, 0, PI * 2);\n  }\n\n  hitArea(context, center, radius, topRadius, height, minHeight, color) {\n    var c = {\n        x: center.x - ORIGIN_X,\n        y: center.y - ORIGIN_Y\n      },\n      scale = CAM_Z / (CAM_Z - height),\n      minScale = CAM_Z / (CAM_Z - minHeight),\n      apex = buildings.project(c, scale),\n      p1,\n      p2;\n\n    topRadius *= scale;\n\n    if (minHeight) {\n      c = buildings.project(c, minScale);\n      radius = radius * minScale;\n    }\n\n    // common tangents for ground and roof circle\n    var tangents = this._tangents(c, radius, apex, topRadius);\n\n    context.fillStyle = color;\n    context.beginPath();\n\n    // TODO: no tangents? roof overlaps everything near cam position\n    if (tangents) {\n      p1 = atan2(tangents[0].y1 - c.y, tangents[0].x1 - c.x);\n      p2 = atan2(tangents[1].y1 - c.y, tangents[1].x1 - c.x);\n      context.moveTo(tangents[1].x2, tangents[1].y2);\n      context.arc(apex.x, apex.y, topRadius, p2, p1);\n      context.arc(c.x, c.y, radius, p1, p2);\n    } else {\n      context.moveTo(c.x + radius, c.y);\n      context.arc(c.x, c.y, radius, 0, 2 * PI);\n    }\n\n    context.closePath();\n    context.fill();\n  }\n\n  _circle(context, center, radius) {\n    context.beginPath();\n    context.arc(center.x, center.y, radius, 0, PI * 2);\n    context.stroke();\n    context.fill();\n  }\n\n  // http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Tangents_between_two_circles\n  _tangents(c1, r1, c2, r2) {\n    var dx = c1.x - c2.x,\n      dy = c1.y - c2.y,\n      dr = r1 - r2,\n      sqdist = dx * dx + dy * dy;\n\n    if (sqdist <= dr * dr) {\n      return;\n    }\n\n    var dist = sqrt(sqdist),\n      vx = -dx / dist,\n      vy = -dy / dist,\n      c = dr / dist,\n      res = [],\n      h,\n      nx,\n      ny;\n\n    // Let A, B be the centers, and C, D be points at which the tangent\n    // touches first and second circle, and n be the normal vector to it.\n    //\n    // We have the system:\n    //   n * n = 1    (n is a unit vector)\n    //   C = A + r1 * n\n    //   D = B + r2 * n\n    //   n * CD = 0   (common orthogonality)\n    //\n    // n * CD = n * (AB + r2*n - r1*n) = AB*n - (r1 -/+ r2) = 0,  <=>\n    // AB * n = (r1 -/+ r2), <=>\n    // v * n = (r1 -/+ r2) / d,  where v = AB/|AB| = AB/d\n    // This is a linear equation in unknown vector n.\n    // Now we're just intersecting a line with a circle: v*n=c, n*n=1\n\n    h = sqrt(max(0, 1 - c * c));\n    for (var sign = 1; sign >= -1; sign -= 2) {\n      nx = vx * c - sign * h * vy;\n      ny = vy * c + sign * h * vx;\n      res.push({\n        x1: (c1.x + r1 * nx) << 0,\n        y1: (c1.y + r1 * ny) << 0,\n        x2: (c2.x + r2 * nx) << 0,\n        y2: (c2.y + r2 * ny) << 0\n      });\n    }\n\n    return res;\n  }\n}\n\n//****** file: Data.js ******\nclass Data {\n  constructor() {\n    this.geoJSON = new GeoJSON();\n    shadows.setData(this);\n    simplified.setData(this);\n    buildings.setData(this);\n    hitAreas.setData(this);\n    this.DATA_SRC =\n      \"https://{s}.data.osmbuildings.org/0.2/{k}/tile/{z}/{x}/{y}.json\";\n    this.animTimer = null;\n    // Static variables\n    this.loadedItems = {}; // maintain a list of cached items in order to avoid duplicates on tile borders\n    this.items = [];\n    this.request = new Request();\n  }\n\n  getPixelFootprint(buffer) {\n    var footprint = new Int32Array(buffer.length),\n      px;\n\n    for (var i = 0, il = buffer.length - 1; i < il; i += 2) {\n      px = Functions.geoToPixel(buffer[i], buffer[i + 1]);\n      footprint[i] = px.x;\n      footprint[i + 1] = px.y;\n    }\n\n    footprint = Geometry.simplifyPolygon(footprint);\n    if (footprint.length < 8) {\n      // 3 points & end==start (*2)\n      return;\n    }\n\n    return footprint;\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  resetItems() {\n    this.items = [];\n    this.loadedItems = {};\n    hitAreas.reset();\n  }\n\n  fadeIn() {\n    if (this.animTimer) {\n      return;\n    }\n\n    var scope = this;\n    this.animTimer = setInterval(function() {\n      var dataItems = scope.items;\n      var isNeeded = false;\n\n      for (var i = 0, il = dataItems.length; i < il; i++) {\n        if (dataItems[i].scale < 1) {\n          dataItems[i].scale += 0.5 * 0.2; // amount*easing\n          if (dataItems[i].scale > 1) {\n            dataItems[i].scale = 1;\n          }\n          isNeeded = true;\n        }\n      }\n\n      requestAnimFrame(function() {\n        shadows.render();\n        simplified.render();\n        hitAreas.render();\n        buildings.render();\n      });\n\n      if (!isNeeded) {\n        clearInterval(this.animTimer);\n        this.animTimer = null;\n      }\n    }, 33);\n  }\n\n  addRenderItems(data, allAreNew) {\n    var item, scaledItem, id;\n\n    var geojson = this.geoJSON.read(data);\n    //console.log(\"Json\", geojson);\n    for (var i = 0, il = geojson.length; i < il; i++) {\n      item = geojson[i];\n      id =\n        item.id ||\n        [\n          item.footprint[0],\n          item.footprint[1],\n          item.height,\n          item.minHeight\n        ].join(\",\");\n      if (!this.loadedItems[id]) {\n        if ((scaledItem = this.scale(item))) {\n          scaledItem.scale = allAreNew ? 0 : 1;\n          this.items.push(scaledItem);\n          this.loadedItems[id] = 1;\n        }\n      }\n    }\n    this.fadeIn();\n  }\n\n  scale(item) {\n    var res = {},\n      // TODO: calculate this on zoom change only\n      zoomScale = 6 / pow(2, ZOOM - MIN_ZOOM); // TODO: consider using HEIGHT / (global.devicePixelRatio || 1)\n\n    if (item.id) {\n      res.id = item.id;\n    }\n\n    res.height = min(item.height / zoomScale, MAX_HEIGHT);\n    res.realHeight = item.height;\n\n    res.minHeight = isNaN(item.minHeight) ? 0 : item.minHeight / zoomScale;\n    if (res.minHeight > MAX_HEIGHT) {\n      return;\n    }\n\n    res.footprint = this.getPixelFootprint(item.footprint);\n    if (!res.footprint) {\n      return;\n    }\n    res.center = Geometry.getCenter(res.footprint);\n\n    if (item.radius) {\n      res.radius = item.radius * PIXEL_PER_DEG;\n    }\n    if (item.shape) {\n      res.shape = item.shape;\n    }\n    if (item.roofShape) {\n      res.roofShape = item.roofShape;\n    }\n    if (\n      (res.roofShape === \"cone\" || res.roofShape === \"dome\") &&\n      !res.shape &&\n      Geometry.isRotational(res.footprint)\n    ) {\n      res.shape = \"cylinder\";\n    }\n\n    if (item.holes) {\n      res.holes = [];\n      var innerFootprint;\n      for (var i = 0, il = item.holes.length; i < il; i++) {\n        // TODO: simplify\n        if ((innerFootprint = this.getPixelFootprint(item.holes[i]))) {\n          res.holes.push(innerFootprint);\n        }\n      }\n    }\n\n    var color;\n\n    if (item.wallColor) {\n      if ((color = Color.parse(item.wallColor))) {\n        color = color.alpha(ZOOM_FACTOR);\n        res.altColor = \"\" + color.lightness(0.8);\n        res.wallColor = \"\" + color;\n      }\n    }\n\n    if (item.roofColor) {\n      if ((color = Color.parse(item.roofColor))) {\n        res.roofColor = \"\" + color.alpha(ZOOM_FACTOR);\n      }\n    }\n\n    if (item.relationId) {\n      res.relationId = item.relationId;\n    }\n    res.hitColor = hitAreas.idToColor(item.relationId || item.id);\n\n    res.roofHeight = isNaN(item.roofHeight) ? 0 : item.roofHeight / zoomScale;\n\n    if (res.height + res.roofHeight <= res.minHeight) {\n      return;\n    }\n\n    return res;\n  }\n\n  set(data) {\n    // Make sure valid json\n    try {\n      JSON.parse(data);\n    } catch (e) {\n      return;\n    }\n    this.isStatic = true;\n    this.resetItems();\n    this._staticData = data;\n    this.addRenderItems(this._staticData, true);\n  }\n\n  load(src, key) {\n    this.src = src || this.DATA_SRC.replace(\"{k}\", key || \"anonymous\");\n    this.update();\n  }\n\n  update() {\n    this.resetItems();\n\n    if (ZOOM < MIN_ZOOM) {\n      return;\n    }\n\n    if (this.isStatic && this._staticData) {\n      this.addRenderItems(this._staticData);\n      return;\n    }\n\n    if (!this.src) {\n      return;\n    }\n\n    var tileZoom = MIN_ZOOM,\n      tileSize = 256,\n      zoomedTileSize =\n        ZOOM > tileZoom\n          ? tileSize << (ZOOM - tileZoom)\n          : tileSize >> (tileZoom - ZOOM),\n      minX = (ORIGIN_X / zoomedTileSize) << 0,\n      minY = (ORIGIN_Y / zoomedTileSize) << 0,\n      maxX = ceil((ORIGIN_X + WIDTH) / zoomedTileSize),\n      maxY = ceil((ORIGIN_Y + HEIGHT) / zoomedTileSize),\n      x,\n      y;\n\n    var scope = this;\n\n    function callback(json) {\n      scope.addRenderItems(json);\n    }\n\n    for (y = minY; y <= maxY; y++) {\n      for (x = minX; x <= maxX; x++) {\n        this.loadTile(x, y, tileZoom, callback);\n      }\n    }\n  }\n\n  loadTile(x, y, zoom, callback) {\n    var s = \"abcd\"[(x + y) % 4];\n    var url = this.src\n      .replace(\"{s}\", s)\n      .replace(\"{x}\", x)\n      .replace(\"{y}\", y)\n      .replace(\"{z}\", zoom);\n    return this.request.loadJSON(url, callback);\n  }\n}\n\n//****** file: functions.js ******\nclass Functions {\n  static rad(deg) {\n    return (deg * PI) / 180;\n  }\n\n  static deg(rad) {\n    return (rad / PI) * 180;\n  }\n\n  static pixelToGeo(x, y) {\n    var res = {};\n    x /= MAP_SIZE;\n    y /= MAP_SIZE;\n    res[LAT] =\n      y <= 0\n        ? 90\n        : y >= 1\n        ? -90\n        : Functions.deg(2 * atan(exp(PI * (1 - 2 * y))) - HALF_PI);\n    res[LON] = (x === 1 ? 1 : ((x % 1) + 1) % 1) * 360 - 180;\n    return res;\n  }\n\n  static geoToPixel(lat, lon) {\n    var latitude = min(\n        1,\n        max(0, 0.5 - log(tan(QUARTER_PI + (HALF_PI * lat) / 180)) / PI / 2)\n      ),\n      longitude = lon / 360 + 0.5;\n    return {\n      x: (longitude * MAP_SIZE) << 0,\n      y: (latitude * MAP_SIZE) << 0\n    };\n  }\n\n  static fromRange(sVal, sMin, sMax, dMin, dMax) {\n    sVal = min(max(sVal, sMin), sMax);\n    var rel = (sVal - sMin) / (sMax - sMin),\n      range = dMax - dMin;\n    return min(max(dMin + rel * range, dMin), dMax);\n  }\n\n  static isVisible(polygon) {\n    var maxX = WIDTH + ORIGIN_X,\n      maxY = HEIGHT + ORIGIN_Y;\n\n    // TODO: checking footprint is sufficient for visibility - NOT VALID FOR SHADOWS!\n    for (var i = 0, il = polygon.length - 3; i < il; i += 2) {\n      if (\n        polygon[i] > ORIGIN_X &&\n        polygon[i] < maxX &&\n        polygon[i + 1] > ORIGIN_Y &&\n        polygon[i + 1] < maxY\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n//****** file: GeoJSON.js ******\nclass GeoJSON {\n  constructor() {\n    this.METERS_PER_LEVEL = 3;\n\n    this.materialColors = {\n      brick: \"#cc7755\",\n      bronze: \"#ffeecc\",\n      canvas: \"#fff8f0\",\n      concrete: \"#999999\",\n      copper: \"#a0e0d0\",\n      glass: \"#e8f8f8\",\n      gold: \"#ffcc00\",\n      plants: \"#009933\",\n      metal: \"#aaaaaa\",\n      panel: \"#fff8f0\",\n      plaster: \"#999999\",\n      roof_tiles: \"#f08060\",\n      silver: \"#cccccc\",\n      slate: \"#666666\",\n      stone: \"#996666\",\n      tar_paper: \"#333333\",\n      wood: \"#deb887\"\n    };\n\n    this.baseMaterials = {\n      asphalt: \"tar_paper\",\n      bitumen: \"tar_paper\",\n      block: \"stone\",\n      bricks: \"brick\",\n      glas: \"glass\",\n      glassfront: \"glass\",\n      grass: \"plants\",\n      masonry: \"stone\",\n      granite: \"stone\",\n      panels: \"panel\",\n      paving_stones: \"stone\",\n      plastered: \"plaster\",\n      rooftiles: \"roof_tiles\",\n      roofingfelt: \"tar_paper\",\n      sandstone: \"stone\",\n      sheet: \"canvas\",\n      sheets: \"canvas\",\n      shingle: \"tar_paper\",\n      shingles: \"tar_paper\",\n      slates: \"slate\",\n      steel: \"metal\",\n      tar: \"tar_paper\",\n      tent: \"canvas\",\n      thatch: \"plants\",\n      tile: \"roof_tiles\",\n      tiles: \"roof_tiles\"\n    };\n\n    this.WINDING_CLOCKWISE = \"CW\";\n    this.WINDING_COUNTER_CLOCKWISE = \"CCW\";\n    // cardboard\n    // eternit\n    // limestone\n    // straw\n  }\n\n  getMaterialColor(str) {\n    str = str.toLowerCase();\n    if (str[0] === \"#\") {\n      return str;\n    }\n    return this.materialColors[this.baseMaterials[str] || str] || null;\n  }\n\n  // detect winding direction: clockwise or counter clockwise\n  getWinding(points) {\n    var x1,\n      y1,\n      x2,\n      y2,\n      a = 0,\n      i,\n      il;\n    for (i = 0, il = points.length - 3; i < il; i += 2) {\n      x1 = points[i];\n      y1 = points[i + 1];\n      x2 = points[i + 2];\n      y2 = points[i + 3];\n      a += x1 * y2 - x2 * y1;\n    }\n    return a / 2 > 0 ? this.WINDING_CLOCKWISE : this.WINDING_COUNTER_CLOCKWISE;\n  }\n\n  // enforce a polygon winding direcetion. Needed for proper backface culling.\n  makeWinding(points, direction) {\n    var winding = this.getWinding(points);\n    if (winding === direction) {\n      return points;\n    }\n    var revPoints = [];\n    for (var i = points.length - 2; i >= 0; i -= 2) {\n      revPoints.push(points[i], points[i + 1]);\n    }\n    return revPoints;\n  }\n\n  alignProperties(prop) {\n    var item = {};\n\n    prop = prop || {};\n\n    item.height =\n      prop.height ||\n      (prop.levels ? prop.levels * this.METERS_PER_LEVEL : DEFAULT_HEIGHT);\n    item.minHeight =\n      prop.minHeight ||\n      (prop.minLevel ? prop.minLevel * this.METERS_PER_LEVEL : 0);\n\n    var wallColor = prop.material\n      ? this.getMaterialColor(prop.material)\n      : prop.wallColor || prop.color;\n    if (wallColor) {\n      item.wallColor = wallColor;\n    }\n\n    var roofColor = prop.roofMaterial\n      ? this.getMaterialColor(prop.roofMaterial)\n      : prop.roofColor;\n    if (roofColor) {\n      item.roofColor = roofColor;\n    }\n\n    switch (prop.shape) {\n      case \"cylinder\":\n      case \"cone\":\n      case \"dome\":\n      case \"sphere\":\n        item.shape = prop.shape;\n        item.isRotational = true;\n        break;\n\n      case \"pyramid\":\n        item.shape = prop.shape;\n        break;\n    }\n\n    switch (prop.roofShape) {\n      case \"cone\":\n      case \"dome\":\n        item.roofShape = prop.roofShape;\n        item.isRotational = true;\n        break;\n\n      case \"pyramid\":\n        item.roofShape = prop.roofShape;\n        break;\n    }\n\n    if (item.roofShape && prop.roofHeight) {\n      item.roofHeight = prop.roofHeight;\n      item.height = max(0, item.height - item.roofHeight);\n    } else {\n      item.roofHeight = 0;\n    }\n\n    return item;\n  }\n\n  getGeometries(geometry) {\n    var i,\n      il,\n      polygon,\n      geometries = [],\n      sub;\n\n    switch (geometry.type) {\n      case \"GeometryCollection\":\n        geometries = [];\n        for (i = 0, il = geometry.geometries.length; i < il; i++) {\n          if ((sub = this.getGeometries(geometry.geometries[i]))) {\n            geometries.push.apply(geometries, sub);\n          }\n        }\n        return geometries;\n\n      case \"MultiPolygon\":\n        geometries = [];\n        for (i = 0, il = geometry.coordinates.length; i < il; i++) {\n          if (\n            (sub = this.getGeometries({\n              type: \"Polygon\",\n              coordinates: geometry.coordinates[i]\n            }))\n          ) {\n            geometries.push.apply(geometries, sub);\n          }\n        }\n        return geometries;\n\n      case \"Polygon\":\n        polygon = geometry.coordinates;\n        break;\n\n      default:\n        return [];\n    }\n\n    var j,\n      jl,\n      p,\n      lat = 1,\n      lon = 0,\n      outer = [],\n      inner = [];\n\n    p = polygon[0];\n    for (i = 0, il = p.length; i < il; i++) {\n      outer.push(p[i][lat], p[i][lon]);\n    }\n    outer = this.makeWinding(outer, this.WINDING_CLOCKWISE);\n\n    for (i = 0, il = polygon.length - 1; i < il; i++) {\n      p = polygon[i + 1];\n      inner[i] = [];\n      for (j = 0, jl = p.length; j < jl; j++) {\n        inner[i].push(p[j][lat], p[j][lon]);\n      }\n      inner[i] = this.makeWinding(inner[i], this.WINDING_COUNTER_CLOCKWISE);\n    }\n\n    return [\n      {\n        outer: outer,\n        inner: inner.length ? inner : null\n      }\n    ];\n  }\n\n  clone(obj) {\n    var res = {};\n    for (var p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        res[p] = obj[p];\n      }\n    }\n    return res;\n  }\n\n  read(geojson) {\n    if (!geojson || geojson.type !== \"FeatureCollection\") {\n      return [];\n    }\n\n    var collection = geojson.features,\n      i,\n      il,\n      j,\n      jl,\n      res = [],\n      feature,\n      geometries,\n      baseItem,\n      item;\n\n    for (i = 0, il = collection.length; i < il; i++) {\n      feature = collection[i];\n\n      // TODO review this commented out code\n      if (feature.type !== \"Feature\") {\n        // || onEach(feature) === false) {\n        continue;\n      }\n\n      baseItem = this.alignProperties(feature.properties);\n      geometries = this.getGeometries(feature.geometry);\n\n      for (j = 0, jl = geometries.length; j < jl; j++) {\n        item = this.clone(baseItem);\n        item.footprint = geometries[j].outer;\n        //console.log(\"item \", item);\n        if (item.isRotational) {\n          item.radius = Geometry.getLonDelta(item.footprint);\n        }\n\n        if (geometries[j].inner) {\n          item.holes = geometries[j].inner;\n        }\n        if (feature.id || feature.properties.id) {\n          item.id = feature.id || feature.properties.id;\n        }\n\n        if (feature.properties.relationId) {\n          item.relationId = feature.properties.relationId;\n        }\n\n        res.push(item); // TODO: clone base properties!\n      }\n    }\n\n    return res;\n  }\n}\n\n//****** file: geometry.js ******\nclass Geometry {\n  static getDistance(p1, p2) {\n    var dx = p1.x - p2.x,\n      dy = p1.y - p2.y;\n    return dx * dx + dy * dy;\n  }\n\n  static isRotational(polygon) {\n    var length = polygon.length;\n    if (length < 16) {\n      return false;\n    }\n\n    var i;\n\n    var minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity;\n    for (i = 0; i < length - 1; i += 2) {\n      minX = Math.min(minX, polygon[i]);\n      maxX = Math.max(maxX, polygon[i]);\n      minY = Math.min(minY, polygon[i + 1]);\n      maxY = Math.max(maxY, polygon[i + 1]);\n    }\n\n    var width = maxX - minX,\n      height = maxY - minY,\n      ratio = width / height;\n\n    if (ratio < 0.85 || ratio > 1.15) {\n      return false;\n    }\n\n    var center = {\n        x: minX + width / 2,\n        y: minY + height / 2\n      },\n      radius = (width + height) / 4,\n      sqRadius = radius * radius;\n\n    for (i = 0; i < length - 1; i += 2) {\n      var dist = Geometry.getDistance(\n        {\n          x: polygon[i],\n          y: polygon[i + 1]\n        },\n        center\n      );\n      if (dist / sqRadius < 0.8 || dist / sqRadius > 1.2) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  static getSquareSegmentDistance(px, py, p1x, p1y, p2x, p2y) {\n    var dx = p2x - p1x,\n      dy = p2y - p1y,\n      t;\n    if (dx !== 0 || dy !== 0) {\n      t = ((px - p1x) * dx + (py - p1y) * dy) / (dx * dx + dy * dy);\n      if (t > 1) {\n        p1x = p2x;\n        p1y = p2y;\n      } else if (t > 0) {\n        p1x += dx * t;\n        p1y += dy * t;\n      }\n    }\n    dx = px - p1x;\n    dy = py - p1y;\n    return dx * dx + dy * dy;\n  }\n\n  static simplifyPolygon(buffer) {\n    var sqTolerance = 2,\n      len = buffer.length / 2,\n      markers = new Uint8Array(len),\n      first = 0,\n      last = len - 1,\n      i,\n      maxSqDist,\n      sqDist,\n      index,\n      firstStack = [],\n      lastStack = [],\n      newBuffer = [];\n\n    markers[first] = markers[last] = 1;\n\n    while (last) {\n      maxSqDist = 0;\n      for (i = first + 1; i < last; i++) {\n        sqDist = Geometry.getSquareSegmentDistance(\n          buffer[i * 2],\n          buffer[i * 2 + 1],\n          buffer[first * 2],\n          buffer[first * 2 + 1],\n          buffer[last * 2],\n          buffer[last * 2 + 1]\n        );\n        if (sqDist > maxSqDist) {\n          index = i;\n          maxSqDist = sqDist;\n        }\n      }\n\n      if (maxSqDist > sqTolerance) {\n        markers[index] = 1;\n\n        firstStack.push(first);\n        lastStack.push(index);\n\n        firstStack.push(index);\n        lastStack.push(last);\n      }\n\n      first = firstStack.pop();\n      last = lastStack.pop();\n    }\n\n    for (i = 0; i < len; i++) {\n      if (markers[i]) {\n        newBuffer.push(buffer[i * 2], buffer[i * 2 + 1]);\n      }\n    }\n\n    return newBuffer;\n  }\n\n  static getCenter(footprint) {\n    var minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity;\n    for (var i = 0, il = footprint.length - 3; i < il; i += 2) {\n      minX = min(minX, footprint[i]);\n      maxX = max(maxX, footprint[i]);\n      minY = min(minY, footprint[i + 1]);\n      maxY = max(maxY, footprint[i + 1]);\n    }\n    return {\n      x: (minX + (maxX - minX) / 2) << 0,\n      y: (minY + (maxY - minY) / 2) << 0\n    };\n  }\n\n  static getLonDelta(footprint) {\n    var minLon = 180,\n      maxLon = -180;\n    for (var i = 0, il = footprint.length; i < il; i += 2) {\n      minLon = min(minLon, footprint[i + 1]);\n      maxLon = max(maxLon, footprint[i + 1]);\n    }\n    return (maxLon - minLon) / 2;\n  }\n}\n\n//****** file: HitAreas.js ******\nclass HitAreas {\n  constructor() {\n    this.data = null;\n\n    this._idMapping = [null];\n  }\n\n  setData(data) {\n    this.data = data;\n  }\n\n  reset() {\n    this._idMapping = [null];\n  }\n\n  render() {\n    if (this._timer) {\n      return;\n    }\n    var self = this;\n    this._timer = setTimeout(function() {\n      self._timer = null;\n      self._render();\n    }, 500);\n  }\n\n  _render() {\n    var context = this.context;\n\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n\n    // show on high zoom levels only and avoid rendering during zoom\n    if (ZOOM < MIN_ZOOM || isZooming) {\n      return;\n    }\n\n    var item,\n      h,\n      mh,\n      sortCam = {\n        x: CAM_X + ORIGIN_X,\n        y: CAM_Y + ORIGIN_Y\n      },\n      footprint,\n      color,\n      dataItems = this.data.getItems();\n\n    dataItems.sort(function(a, b) {\n      return (\n        a.minHeight - b.minHeight ||\n        Geometry.getDistance(b.center, sortCam) -\n          Geometry.getDistance(a.center, sortCam) ||\n        b.height - a.height\n      );\n    });\n\n    var cylinder = new Cylinder();\n    var pyramid = new Pyramid();\n    var block = new Block();\n    for (var i = 0, il = dataItems.length; i < il; i++) {\n      item = dataItems[i];\n\n      if (!(color = item.hitColor)) {\n        continue;\n      }\n\n      footprint = item.footprint;\n\n      if (!Functions.isVisible(footprint)) {\n        continue;\n      }\n\n      h = item.height;\n\n      mh = 0;\n      if (item.minHeight) {\n        mh = item.minHeight;\n      }\n\n      switch (item.shape) {\n        case \"cylinder\":\n          cylinder.hitArea(\n            context,\n            item.center,\n            item.radius,\n            item.radius,\n            h,\n            mh,\n            color\n          );\n          break;\n        case \"cone\":\n          cylinder.hitArea(context, item.center, item.radius, 0, h, mh, color);\n          break;\n        case \"dome\":\n          cylinder.hitArea(\n            context,\n            item.center,\n            item.radius,\n            item.radius / 2,\n            h,\n            mh,\n            color\n          );\n          break;\n        case \"sphere\":\n          cylinder.hitArea(\n            context,\n            item.center,\n            item.radius,\n            item.radius,\n            h,\n            mh,\n            color\n          );\n          break;\n        case \"pyramid\":\n          pyramid.hitArea(context, footprint, item.center, h, mh, color);\n          break;\n        default:\n          block.hitArea(context, footprint, item.holes, h, mh, color);\n      }\n\n      switch (item.roofShape) {\n        case \"cone\":\n          cylinder.hitArea(\n            context,\n            item.center,\n            item.radius,\n            0,\n            h + item.roofHeight,\n            h,\n            color\n          );\n          break;\n        case \"dome\":\n          cylinder.hitArea(\n            context,\n            item.center,\n            item.radius,\n            item.radius / 2,\n            h + item.roofHeight,\n            h,\n            color\n          );\n          break;\n        case \"pyramid\":\n          pyramid.hitArea(\n            context,\n            footprint,\n            item.center,\n            h + item.roofHeight,\n            h,\n            color\n          );\n          break;\n      }\n    }\n\n    // otherwise fails on size 0\n    if (WIDTH && HEIGHT) {\n      this._imageData = this.context.getImageData(0, 0, WIDTH, HEIGHT).data;\n    }\n  }\n\n  getIdFromXY(x, y) {\n    var imageData = this._imageData;\n    if (!imageData) {\n      return;\n    }\n    var pos = 4 * ((y | 0) * WIDTH + (x | 0));\n    var index =\n      imageData[pos] | (imageData[pos + 1] << 8) | (imageData[pos + 2] << 16);\n    return this._idMapping[index];\n  }\n\n  idToColor(id) {\n    var index = this._idMapping.indexOf(id);\n    if (index === -1) {\n      this._idMapping.push(id);\n      index = this._idMapping.length - 1;\n    }\n    var r = index & 0xff;\n    var g = (index >> 8) & 0xff;\n    var b = (index >> 16) & 0xff;\n    return \"rgb(\" + [r, g, b].join(\",\") + \")\";\n  }\n\n  setContext(context) {\n    this.context = context;\n  }\n}\n\n//****** file: Layers.js ******\nclass Layers {\n  constructor() {\n    this.container = document.createElement(\"DIV\");\n    this.items = [];\n    this.container.style.pointerEvents = \"none\";\n    this.container.style.position = \"absolute\";\n    this.container.style.left = 0;\n    this.container.style.top = 0;\n\n    // TODO: improve this to .setContext(context)\n    shadows.setContext(this.createContext(this.container));\n    simplified.setContext(this.createContext(this.container));\n    buildings.setContext(this.createContext(this.container));\n    hitAreas.setContext(this.createContext());\n    //    Debug.context      = this.createContext(this.container);\n  }\n\n  render(quick) {\n    requestAnimFrame(function() {\n      if (!quick) {\n        shadows.render();\n        simplified.render();\n        hitAreas.render();\n      }\n      buildings.render();\n    });\n  }\n\n  createContext(container) {\n    var canvas = document.createElement(\"CANVAS\");\n    canvas.style.transform = \"translate3d(0, 0, 0)\"; // turn on hw acceleration\n    canvas.style.imageRendering = \"optimizeSpeed\";\n    canvas.style.position = \"absolute\";\n    canvas.style.left = 0;\n    canvas.style.top = 0;\n\n    var context = canvas.getContext(\"2d\");\n    context.lineCap = \"round\";\n    context.lineJoin = \"round\";\n    context.lineWidth = 1;\n    context.imageSmoothingEnabled = false;\n\n    this.items.push(canvas);\n    if (container) {\n      container.appendChild(canvas);\n    }\n\n    return context;\n  }\n\n  appendTo(parentNode) {\n    parentNode.appendChild(this.container);\n  }\n\n  remove() {\n    this.container.parentNode.removeChild(this.container);\n  }\n\n  setSize(width, height) {\n    for (var i = 0, il = this.items.length; i < il; i++) {\n      this.items[i].width = width;\n      this.items[i].height = height;\n    }\n  }\n\n  // usually called after move: container jumps by move delta, cam is reset\n  setPosition(x, y) {\n    this.container.style.left = x + \"px\";\n    this.container.style.top = y + \"px\";\n  }\n}\n\n//****** file: Pyramid.js ******\nclass Pyramid {\n  draw(context, polygon, center, height, minHeight, color, altColor) {\n    var c = {\n        x: center.x - ORIGIN_X,\n        y: center.y - ORIGIN_Y\n      },\n      scale = CAM_Z / (CAM_Z - height),\n      minScale = CAM_Z / (CAM_Z - minHeight),\n      apex = buildings.project(c, scale),\n      a = {\n        x: 0,\n        y: 0\n      },\n      b = {\n        x: 0,\n        y: 0\n      };\n\n    for (var i = 0, il = polygon.length - 3; i < il; i += 2) {\n      a.x = polygon[i] - ORIGIN_X;\n      a.y = polygon[i + 1] - ORIGIN_Y;\n      b.x = polygon[i + 2] - ORIGIN_X;\n      b.y = polygon[i + 3] - ORIGIN_Y;\n\n      if (minHeight) {\n        a = buildings.project(a, minScale);\n        b = buildings.project(b, minScale);\n      }\n\n      // backface culling check\n      if ((b.x - a.x) * (apex.y - a.y) > (apex.x - a.x) * (b.y - a.y)) {\n        // depending on direction, set shading\n        if ((a.x < b.x && a.y < b.y) || (a.x > b.x && a.y > b.y)) {\n          context.fillStyle = altColor;\n        } else {\n          context.fillStyle = color;\n        }\n\n        context.beginPath();\n        this._triangle(context, a, b, apex);\n        context.closePath();\n        context.fill();\n      }\n    }\n  }\n\n  _triangle(context, a, b, c) {\n    context.moveTo(a.x, a.y);\n    context.lineTo(b.x, b.y);\n    context.lineTo(c.x, c.y);\n  }\n\n  _ring(context, polygon) {\n    context.moveTo(polygon[0] - ORIGIN_X, polygon[1] - ORIGIN_Y);\n    for (var i = 2, il = polygon.length - 1; i < il; i += 2) {\n      context.lineTo(polygon[i] - ORIGIN_X, polygon[i + 1] - ORIGIN_Y);\n    }\n  }\n\n  shadow(context, polygon, center, height, minHeight) {\n    var a = {\n        x: 0,\n        y: 0\n      },\n      b = {\n        x: 0,\n        y: 0\n      },\n      c = {\n        x: center.x - ORIGIN_X,\n        y: center.y - ORIGIN_Y\n      },\n      apex = shadows.project(c, height);\n\n    for (var i = 0, il = polygon.length - 3; i < il; i += 2) {\n      a.x = polygon[i] - ORIGIN_X;\n      a.y = polygon[i + 1] - ORIGIN_Y;\n      b.x = polygon[i + 2] - ORIGIN_X;\n      b.y = polygon[i + 3] - ORIGIN_Y;\n\n      if (minHeight) {\n        a = shadows.project(a, minHeight);\n        b = shadows.project(b, minHeight);\n      }\n\n      // backface culling check\n      if ((b.x - a.x) * (apex.y - a.y) > (apex.x - a.x) * (b.y - a.y)) {\n        // depending on direction, set shading\n        this._triangle(context, a, b, apex);\n      }\n    }\n  }\n\n  shadowMask(context, polygon) {\n    this._ring(context, polygon);\n  }\n\n  hitArea(context, polygon, center, height, minHeight, color) {\n    var c = {\n        x: center.x - ORIGIN_X,\n        y: center.y - ORIGIN_Y\n      },\n      scale = CAM_Z / (CAM_Z - height),\n      minScale = CAM_Z / (CAM_Z - minHeight),\n      apex = buildings.project(c, scale),\n      a = {\n        x: 0,\n        y: 0\n      },\n      b = {\n        x: 0,\n        y: 0\n      };\n\n    context.fillStyle = color;\n    context.beginPath();\n\n    for (var i = 0, il = polygon.length - 3; i < il; i += 2) {\n      a.x = polygon[i] - ORIGIN_X;\n      a.y = polygon[i + 1] - ORIGIN_Y;\n      b.x = polygon[i + 2] - ORIGIN_X;\n      b.y = polygon[i + 3] - ORIGIN_Y;\n\n      if (minHeight) {\n        a = buildings.project(a, minScale);\n        b = buildings.project(b, minScale);\n      }\n\n      // backface culling check\n      if ((b.x - a.x) * (apex.y - a.y) > (apex.x - a.x) * (b.y - a.y)) {\n        this._triangle(context, a, b, apex);\n      }\n    }\n\n    context.closePath();\n    context.fill();\n  }\n}\n\n//****** file: Request.js ******\nclass Request {\n  constructor() {\n    this.cacheData = {};\n    this.cacheIndex = [];\n    this.cacheSize = 0;\n    this.maxCacheSize = 1024 * 1024 * 5; // 5MB\n  }\n\n  xhr(url, callback) {\n    if (this.cacheData[url]) {\n      if (callback) {\n        callback(this.cacheData[url]);\n      }\n      return;\n    }\n\n    var req = new XMLHttpRequest();\n    var scope = this;\n    req.onreadystatechange = function() {\n      if (req.readyState !== 4) {\n        return;\n      }\n      if (!req.status || req.status < 200 || req.status > 299) {\n        return;\n      }\n      if (callback && req.responseText) {\n        var responseText = req.responseText;\n        scope.cacheData[url] = responseText;\n        scope.cacheIndex.push({\n          url: url,\n          size: responseText.length\n        });\n        scope.cacheSize += responseText.length;\n\n        callback(responseText);\n\n        while (scope.cacheSize > scope.maxCacheSize) {\n          var item = scope.cacheIndex.shift();\n          scope.cacheSize -= item.size;\n          delete scope.cacheData[item.url];\n        }\n      }\n    };\n\n    req.open(\"GET\", url);\n    req.send(null);\n\n    return req;\n  }\n\n  loadJSON(url, callback) {\n    return this.xhr(url, function(responseText) {\n      var json;\n      try {\n        json = JSON.parse(responseText);\n      } catch (ex) {}\n      callback(json);\n    });\n  }\n}\n\n//****** file: Shadows.js ******\nclass Shadows {\n  constructor() {\n    this.sunPosition = new SunPosition();\n    this.enabled = true;\n    this.color = \"#666666\";\n    this.blurColor = \"#000000\";\n    this.blurSize = 15;\n    this.date = new Date();\n    this.direction = {\n      x: 0,\n      y: 0\n    };\n    this.context = null;\n    this.data = null;\n  }\n\n  project(p, h) {\n    return {\n      x: p.x + this.direction.x * h,\n      y: p.y + this.direction.y * h\n    };\n  }\n\n  setData(data) {\n    this.data = data;\n  }\n\n  render() {\n    var context = this.context,\n      screenCenter,\n      sun,\n      length,\n      alpha;\n\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n\n    // show on high zoom levels only and avoid rendering during zoom\n    if (!this.enabled || ZOOM < MIN_ZOOM || isZooming) {\n      return;\n    }\n\n    // TODO: calculate this just on demand\n    screenCenter = Functions.pixelToGeo(\n      CENTER_X + ORIGIN_X,\n      CENTER_Y + ORIGIN_Y\n    );\n    sun = this.sunPosition.getSunPosition(\n      this.date,\n      screenCenter.latitude,\n      screenCenter.longitude\n    );\n\n    if (sun.altitude <= 0) {\n      return;\n    }\n\n    length = 1 / tan(sun.altitude);\n    alpha = length < 5 ? 0.75 : (1 / length) * 5;\n\n    this.direction.x = cos(sun.azimuth) * length;\n    this.direction.y = sin(sun.azimuth) * length;\n\n    var i,\n      il,\n      item,\n      h,\n      mh,\n      footprint,\n      dataItems = this.data.getItems();\n\n    context.canvas.style.opacity = alpha / (ZOOM_FACTOR * 2);\n    context.shadowColor = this.blurColor;\n    context.shadowBlur = this.blurSize * (ZOOM_FACTOR / 2);\n    context.fillStyle = this.color;\n    context.beginPath();\n\n    var cylinder = new Cylinder();\n    var pyramid = new Pyramid();\n    var block = new Block();\n    for (i = 0, il = dataItems.length; i < il; i++) {\n      item = dataItems[i];\n\n      footprint = item.footprint;\n\n      if (!Functions.isVisible(footprint)) {\n        continue;\n      }\n\n      // when fading in, use a dynamic height\n      h = item.scale < 1 ? item.height * item.scale : item.height;\n\n      mh = 0;\n      if (item.minHeight) {\n        mh = item.scale < 1 ? item.minHeight * item.scale : item.minHeight;\n      }\n\n      switch (item.shape) {\n        case \"cylinder\":\n          cylinder.shadow(\n            context,\n            item.center,\n            item.radius,\n            item.radius,\n            h,\n            mh\n          );\n          break;\n        case \"cone\":\n          cylinder.shadow(context, item.center, item.radius, 0, h, mh);\n          break;\n        case \"dome\":\n          cylinder.shadow(\n            context,\n            item.center,\n            item.radius,\n            item.radius / 2,\n            h,\n            mh\n          );\n          break;\n        case \"sphere\":\n          cylinder.shadow(\n            context,\n            item.center,\n            item.radius,\n            item.radius,\n            h,\n            mh\n          );\n          break;\n        case \"pyramid\":\n          pyramid.shadow(context, footprint, item.center, h, mh);\n          break;\n        default:\n          block.shadow(context, footprint, item.holes, h, mh);\n      }\n\n      switch (item.roofShape) {\n        case \"cone\":\n          cylinder.shadow(\n            context,\n            item.center,\n            item.radius,\n            0,\n            h + item.roofHeight,\n            h\n          );\n          break;\n        case \"dome\":\n          cylinder.shadow(\n            context,\n            item.center,\n            item.radius,\n            item.radius / 2,\n            h + item.roofHeight,\n            h\n          );\n          break;\n        case \"pyramid\":\n          pyramid.shadow(\n            context,\n            footprint,\n            item.center,\n            h + item.roofHeight,\n            h\n          );\n          break;\n      }\n    }\n\n    context.closePath();\n    context.fill();\n\n    context.shadowBlur = null;\n\n    // now draw all the footprints as negative clipping mask\n    context.globalCompositeOperation = \"destination-out\";\n    context.beginPath();\n\n    for (i = 0, il = dataItems.length; i < il; i++) {\n      item = dataItems[i];\n\n      footprint = item.footprint;\n\n      if (!Functions.isVisible(footprint)) {\n        continue;\n      }\n\n      // if object is hovered, there is no need to clip it's footprint\n      if (item.minHeight) {\n        continue;\n      }\n\n      switch (item.shape) {\n        case \"cylinder\":\n        case \"cone\":\n        case \"dome\":\n          cylinder.shadowMask(context, item.center, item.radius);\n          break;\n        default:\n          block.shadowMask(context, footprint, item.holes);\n      }\n    }\n\n    context.fillStyle = \"#00ff00\";\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  setContext(context) {\n    this.context = context;\n  }\n}\n\n//****** file: Simplified.js ******\nclass Simplified {\n  constructor() {\n    this.data = null;\n    this.init();\n  }\n\n  setData(data) {\n    this.data = data;\n  }\n\n  init() {\n    this.maxZoom = this.MIN_ZOOM + 2;\n    this.maxHeight = 5;\n  }\n\n  isSimple(item) {\n    return (\n      ZOOM <= this.maxZoom && item.height + item.roofHeight < this.maxHeight\n    );\n  }\n\n  render() {\n    var context = this.context;\n    context.clearRect(0, 0, WIDTH, HEIGHT);\n\n    // show on high zoom levels only and avoid rendering during zoom\n    if (ZOOM < MIN_ZOOM || isZooming || ZOOM > this.maxZoom) {\n      return;\n    }\n\n    var item,\n      footprint,\n      dataItems = this.data.getItems();\n\n    var cylinder = new Cylinder();\n    var block = new Block();\n    for (var i = 0, il = dataItems.length; i < il; i++) {\n      item = dataItems[i];\n\n      if (item.height >= this.maxHeight) {\n        continue;\n      }\n\n      footprint = item.footprint;\n\n      if (!Functions.isVisible(footprint)) {\n        continue;\n      }\n\n      context.strokeStyle = item.altColor || ALT_COLOR_STR;\n      context.fillStyle = item.roofColor || ROOF_COLOR_STR;\n\n      switch (item.shape) {\n        case \"cylinder\":\n        case \"cone\":\n        case \"dome\":\n        case \"sphere\":\n          cylinder.simplified(context, item.center, item.radius);\n          break;\n        default:\n          block.simplified(context, footprint, item.holes);\n      }\n    }\n  }\n\n  setContext(context) {\n    this.context = context;\n  }\n}\n\n//****** file: SunPosition.js ******\n\n// calculations are based on http://aa.quae.nl/en/reken/zonpositie.html\n// code credits to Vladimir Agafonkin (@mourner)\nclass SunPosition {\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.m = Math;\n    this.PI = m.PI;\n    this.sin = m.sin;\n    this.cos = m.cos;\n    this.tan = m.tan;\n    this.asin = m.asin;\n    this.atan = m.atan2;\n\n    this.rad = PI / 180;\n    this.dayMs = 1000 * 60 * 60 * 24;\n    this.J1970 = 2440588;\n    this.J2000 = 2451545;\n    this.e = this.rad * 23.4397; // obliquity of the Earth\n  }\n\n  toJulian(date) {\n    return date.valueOf() / this.dayMs - 0.5 + this.J1970;\n  }\n  toDays(date) {\n    return this.toJulian(date) - this.J2000;\n  }\n  getRightAscension(l, b) {\n    return this.atan(\n      this.sin(l) * this.cos(this.e) - this.tan(b) * this.sin(this.e),\n      this.cos(l)\n    );\n  }\n  getDeclination(l, b) {\n    return this.asin(\n      this.sin(b) * this.cos(this.e) +\n        this.cos(b) * this.sin(this.e) * this.sin(l)\n    );\n  }\n  getAzimuth(H, phi, dec) {\n    return this.atan(\n      this.sin(H),\n      this.cos(H) * this.sin(phi) - this.tan(dec) * this.cos(phi)\n    );\n  }\n  getAltitude(H, phi, dec) {\n    return this.asin(\n      this.sin(phi) * this.sin(dec) +\n        this.cos(phi) * this.cos(dec) * this.cos(H)\n    );\n  }\n  getSiderealTime(d, lw) {\n    return this.rad * (280.16 + 360.9856235 * d) - lw;\n  }\n  getSolarMeanAnomaly(d) {\n    return this.rad * (357.5291 + 0.98560028 * d);\n  }\n  getEquationOfCenter(M) {\n    return (\n      this.rad *\n      (1.9148 * this.sin(M) + 0.02 * this.sin(2 * M) + 0.0003 * this.sin(3 * M))\n    );\n  }\n  getEclipticLongitude(M, C) {\n    var P = this.rad * 102.9372; // perihelion of the Earth\n    return M + C + P + this.PI;\n  }\n\n  getSunPosition(date, lat, lon) {\n    var lw = this.rad * -lon,\n      phi = this.rad * lat,\n      d = this.toDays(date),\n      M = this.getSolarMeanAnomaly(d),\n      C = this.getEquationOfCenter(M),\n      L = this.getEclipticLongitude(M, C),\n      D = this.getDeclination(L, 0),\n      A = this.getRightAscension(L, 0),\n      t = this.getSiderealTime(d, lw),\n      H = t - A;\n\n    return {\n      altitude: this.getAltitude(H, phi, D),\n      azimuth: this.getAzimuth(H, phi, D) - this.PI / 2 // origin: north\n    };\n  }\n}\n\n//****** file: prefix.js ******\nexport default class OSMBuildings extends VectorLayer {\n  constructor(map) {\n    super();\n    this.source = new VectorSource({\n      projection: olProj.get(\"EPSG:900913\")\n    });\n    this.map = map;\n    this.maxExtent = [-20037508.34, -20037508.34, 20037508.34, 20037508.34]; // MaxExtent of layer\n    //this.maxExtent = map.getView().calculateExtent()\n    try {\n      this.setMap(map);\n      map.addLayer(this);\n    } catch (e) {\n      console.log(e);\n    }\n\n    //****** file: variables.js ******\n    this.VERSION = \"0.2.2b\";\n    this.ATTRIBUTION =\n      '&copy; <a href=\"http://osmbuildings.org\">OSM Buildings</a>';\n  }\n\n  source() {\n    return this.getSource();\n  }\n\n  removeLayer() {\n    this.map.removeLayer(this);\n    layers.remove();\n  }\n  //****** file: adapter.js ******\n\n  setGlobalOrigin(origin) {\n    ORIGIN_X = origin.x;\n    ORIGIN_Y = origin.y;\n  }\n\n  moveCam(offset) {\n    CAM_X = CENTER_X + offset.x;\n    CAM_Y = HEIGHT + offset.y;\n    layers.render(true);\n  }\n\n  setSize(size) {\n    WIDTH = size.width;\n    HEIGHT = size.height;\n    CENTER_X = (WIDTH / 2) << 0;\n    CENTER_Y = (HEIGHT / 2) << 0;\n\n    CAM_X = CENTER_X;\n    CAM_Y = HEIGHT;\n\n    layers.setSize(WIDTH, HEIGHT);\n    MAX_HEIGHT = CAM_Z - 50;\n  }\n\n  setZoom(z) {\n    ZOOM = z;\n    MAP_SIZE = MAP_TILE_SIZE << ZOOM;\n\n    var center = Functions.pixelToGeo(ORIGIN_X + CENTER_X, ORIGIN_Y + CENTER_Y);\n    var a = Functions.geoToPixel(center.latitude, 0);\n    var b = Functions.geoToPixel(center.latitude, 1);\n    PIXEL_PER_DEG = b.x - a.x;\n\n    ZOOM_FACTOR = pow(0.95, ZOOM - MIN_ZOOM);\n\n    WALL_COLOR_STR = \"\" + WALL_COLOR.alpha(ZOOM_FACTOR);\n    ALT_COLOR_STR = \"\" + ALT_COLOR.alpha(ZOOM_FACTOR);\n    ROOF_COLOR_STR = \"\" + ROOF_COLOR.alpha(ZOOM_FACTOR);\n  }\n\n  onResize(e) {\n    this.setSize(e);\n    layers.render();\n    data.update();\n  }\n\n  onMoveEnd(e) {\n    layers.render();\n    data.update(); // => fadeIn() => layers.render()\n  }\n\n  onZoomStart() {\n    isZooming = true;\n    // effectively clears because of isZooming flag\n    // TODO: introduce explicit clear()\n    layers.render();\n  }\n\n  onZoomEnd(e) {\n    isZooming = false;\n    this.setZoom(e.zoom);\n    data.update(); // => fadeIn()\n    layers.render();\n  }\n\n  setOrigin() {\n    //console.log(\"setOrigin\");\n    var map = this.map;\n    try {\n      var origin = map.getCoordinateFromPixel([0, 0]);\n      var res = map.getView().getResolution();\n      var ext = this.maxExtent;\n      var x = ((origin[0] - ext[0]) / res) << 0;\n      var y = ((ext[3] - origin[1]) / res) << 0;\n      this.setGlobalOrigin({\n        x: x,\n        y: y\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  setMap(map) {\n    //console.log(\"setMap\");\n    var scope = this;\n    layers.appendTo(document.getElementById(map.getTargetElement().id));\n    this.setSize({\n      width: map.getSize()[0],\n      height: map.getSize()[1]\n    });\n\n    // var layerProjection = map.getView().getProjection();\n    // map.on(\"click\", function(e) {\n    //   var id = hitAreas.getIdFromXY(e.pixel[0], e.pixel[1]);\n    //   if (id) {\n    //     var geo = olProj.transform(\n    //       map.getCoordinateFromPixel([e.pixel[0], e.pixel[1]]),\n    //       layerProjection,\n    //       map.getView().getProjection()\n    //     );\n    //     scope.onClick({\n    //       feature: id,\n    //       lat: geo[0],\n    //       lon: geo[1]\n    //     });\n    //   }\n    // });\n\n    // map.on('moveend', scope.onMoveEnd);\n    // map.on('zoomend', scope.onZoomStart);\n    // map.on('zoomstart', scope.onZoomEnd);\n\n    // TODO why doesn't scope.on work like in OL3\n    map.on(\"precompose\", function(e) {\n      //console.log(\"precompose\");\n      scope.setZoom(map.getView().getZoom());\n      scope.setOrigin();\n      data.resetItems();\n      data.update();\n    });\n  }\n\n  //****** file: public.js ******\n\n  style = function(style) {\n    //console.log(\"style\");\n    style = style || {};\n    var color;\n    if ((color = style.color || style.wallColor)) {\n      WALL_COLOR = Color.parse(color);\n      WALL_COLOR_STR = \"\" + WALL_COLOR.alpha(ZOOM_FACTOR);\n\n      ALT_COLOR = WALL_COLOR.lightness(0.8);\n      ALT_COLOR_STR = \"\" + ALT_COLOR.alpha(ZOOM_FACTOR);\n\n      ROOF_COLOR = WALL_COLOR.lightness(1.2);\n      ROOF_COLOR_STR = \"\" + ROOF_COLOR.alpha(ZOOM_FACTOR);\n    }\n\n    if (style.roofColor) {\n      ROOF_COLOR = Color.parse(style.roofColor);\n      ROOF_COLOR_STR = \"\" + ROOF_COLOR.alpha(ZOOM_FACTOR);\n    }\n\n    if (style.shadows !== undefined) {\n      shadows.enabled = !!style.shadows;\n    }\n\n    layers.render();\n\n    return this;\n  };\n\n  date = function(date) {\n    shadows.date = date;\n    shadows.render();\n    return this;\n  };\n\n  load = function(url) {\n    data.load(url);\n    return this;\n  };\n\n  unload = function() {\n    this.map.removeLayer(this);\n    layers.remove();\n    data.resetItems();\n    data = new Data();\n    return this;\n  };\n\n  set(dataToSet) {\n    data.set(dataToSet);\n    return this;\n  }\n\n  getDataItems() {\n    return data.getItems();\n  }\n\n  onEach = function() {};\n  each = function(handler) {\n    this.onEach = function(payload) {\n      return handler(payload);\n    };\n    return this;\n  };\n\n  onClick = function() {};\n  click = function(handler) {\n    this.onClick = function(payload) {\n      return handler(payload);\n    };\n    return this;\n  };\n}\n\n// Global vars\n\nvar PI = Math.PI;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\n\nvar ZOOM;\nvar MAP_SIZE;\nvar MAP_TILE_SIZE = 256; // map tile size in pixels\n\nvar MIN_ZOOM = 15;\n\nvar LAT = \"latitude\";\nvar LON = \"longitude\";\n\nvar WIDTH = 0;\nvar HEIGHT = 0;\nvar CENTER_X = 0;\nvar CENTER_Y = 0;\nvar ORIGIN_X = 0;\nvar ORIGIN_Y = 0;\n\nvar WALL_COLOR = Color.parse(\"rgba(200, 190, 180)\");\nvar ALT_COLOR = WALL_COLOR.lightness(0.8);\nvar ROOF_COLOR = WALL_COLOR.lightness(1.2);\n\nvar WALL_COLOR_STR = \"\" + WALL_COLOR;\nvar ALT_COLOR_STR = \"\" + ALT_COLOR;\nvar ROOF_COLOR_STR = \"\" + ROOF_COLOR;\n\nvar PIXEL_PER_DEG = 0;\nvar ZOOM_FACTOR = 1;\n\nvar MAX_HEIGHT; // taller buildings will be cut to this\nvar DEFAULT_HEIGHT = 5;\n\nvar CAM_X;\nvar CAM_Y;\nvar CAM_Z = 450;\n\nvar isZooming;\n\n//****** file: shortcuts.js ******\n\n// object access shortcuts\nvar m = Math;\nvar exp = m.exp;\nvar log = m.log;\nvar sin = m.sin;\nvar cos = m.cos;\nvar tan = m.tan;\nvar atan = m.atan;\nvar atan2 = m.atan2;\nvar min = m.min;\nvar max = m.max;\nvar sqrt = m.sqrt;\nvar ceil = m.ceil;\nvar pow = m.pow;\n\n// polyfills\nvar IS_IOS = /iP(ad|hone|od)/g.test(navigator.userAgent);\nvar IS_MSIE = !!~navigator.userAgent.indexOf(\"Trident\");\nvar requestAnimFrame =\n  window.requestAnimationFrame && !IS_IOS && !IS_MSIE\n    ? window.requestAnimationFrame\n    : function(callback) {\n        callback();\n      };\n\n// Objects use for constructing different aspects of buildings\nvar shadows = new Shadows();\nvar simplified = new Simplified();\nvar buildings = new Buildings();\nvar hitAreas = new HitAreas();\n// Object holds the json data\nvar data = new Data();\n// Renders the buildings and properties (e.g. shadows, etc.)\nvar layers = new Layers();\n","import React from \"react\";\n\nimport { Map, View } from \"ol\";\nimport { Tile as TileLayer } from \"ol/layer\";\nimport \"ol/ol.css\";\nimport OSM from \"ol/source/OSM\";\nimport OSMBuildings from \"../OSMBuildings-OL5\";\nimport * as olProj from \"ol/proj.js\";\nimport Button from \"@material-ui/core/Button\";\n\nclass OLMapSample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      featuresLayer: null,\n      OSMBuildings: false,\n      text: \"Show Buildings\"\n    };\n  }\n  componentDidMount = () => {\n    // create map object with feature layer\n    let map = new Map({\n      target: \"mapContainer\",\n      layers: [\n        //default OSM layer\n        new TileLayer({\n          source: new OSM()\n        })\n      ],\n      view: new View({\n        center: olProj.transform([13.33522, 52.5044], \"EPSG:4326\", \"EPSG:3857\"),\n        zoom: 16\n      })\n    });\n\n    // save map and layer references to local state\n    this.setState({\n      map: map\n    });\n  };\n\n  toggleOSMBuildings = () => {\n    if (!this.state.OSMBuildings) {\n      //console.log(\"Show OSM Building\");\n      this.osmBuildings = new OSMBuildings(this.state.map);\n      this.osmBuildings.date(new Date(2017, 5, 15, 17, 30));\n      this.osmBuildings.load();\n      this.setState({ text: \"Hide Buildings\" });\n    } else {\n      //console.log(\"Hide OSM Building\");\n      this.osmBuildings.unload();\n      this.setState({ text: \"Show Buildings\" });\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    const style = {\n      width: \"100%\",\n      height: \"500px\",\n      backgroundColor: \"#ffffff\"\n    };\n    const styleBtn = {\n      margin: 5\n    };\n    return (\n      <div>\n        <div id=\"mapContainer\" style={style}></div>\n        <Button\n          style={styleBtn}\n          color={this.state.OSMBuildings ? \"secondary\" : \"primary\"}\n          variant=\"contained\"\n          onClick={() =>\n            this.setState(\n              { OSMBuildings: !this.state.OSMBuildings },\n              this.toggleOSMBuildings()\n            )\n          }\n        >\n          {text}\n        </Button>\n      </div>\n    );\n  }\n}\nexport default OLMapSample;\n","import React from \"react\";\nimport {\n    render\n} from \"react-dom\";\nimport OLMapFragment from \"./components/OLMapSample\";\nimport \"./index.css\";\n\nrender( < OLMapFragment / > , document.getElementById(\"root\"));\n"],"sourceRoot":""}